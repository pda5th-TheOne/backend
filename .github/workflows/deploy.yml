name: Build, Push, and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-app:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2 with Docker Compose
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 1. Docker 및 Docker Compose 설치 확인
            if ! command -v docker &> /dev/null; then
              echo "Docker not found, installing..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
            fi
            
            if ! command -v docker-compose &> /dev/null; then
              echo "Docker Compose not found, installing..."
              sudo curl -L "https://github.com/docker/compose/releases/download/2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # 2. MySQL 데이터 디렉토리 설정 (환경 변수 활용)
            if [ ! -d "${{ secrets.MYSQL_DATA_PATH }}" ]; then
              echo "Creating MySQL data volume directory at ${{ secrets.MYSQL_DATA_PATH }}..."
              sudo mkdir -p ${{ secrets.MYSQL_DATA_PATH }}
              sudo chown -R 1000:1000 ${{ secrets.MYSQL_DATA_PATH }}
            fi

            # 3. docker-compose.yml 파일 전송
            if [ ! -f /home/${{ secrets.EC2_USER }}/docker-compose.yml ]; then
              echo "Uploading docker-compose.yml to EC2"
              scp -i ~/.ssh/id_rsa $GITHUB_WORKSPACE/docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/docker-compose.yml
            fi

            # 4. 최신 이미지를 pull하고 Docker Compose 재실행
            ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
              export MYSQL_IMAGE=${{ secrets.MYSQL_IMAGE }}
              export MYSQL_CONTAINER_NAME=${{ secrets.MYSQL_CONTAINER_NAME }}
              export MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
              export MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
              export MYSQL_USER=${{ secrets.MYSQL_USER }}
              export MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
              export MYSQL_DATA_PATH=${{ secrets.MYSQL_DATA_PATH }}
            
              cd /home/${{ secrets.EC2_USER }}
              docker-compose pull
              docker-compose down
              docker-compose up -d
            EOF